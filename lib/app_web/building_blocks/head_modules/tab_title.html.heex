<%#...................................................... Description ........................................................
								                ........................... Purpose ..........................
Define catchy effects for the tab when it looses focus (ie, when the user is looking into another webpage in another tab);
								                ...................... Render the component ..................
1) You have to "import AppWeb.HeadModules" to the "layout.ex";
2) Copy this to where you want to use it (to the "head" of the "root.html.heex"):
											<.tab_title options={%{animTitle1: "We miss you! ðŸ’”", animTitle2: "ðŸ’”ðŸ’”ðŸ’”ðŸ’”ðŸ’”"}} 
                                  config={%{type: "1/2/3/4" }} />

								                ...................... Using the component ...................

	                              ....................... Notes & learnings ....................
............................................................................................................................%>
<script>
  let originalTitle = document.title
  let animationTitle = "<%= @options.animTitle1 %>"
  let animationInterval = 1
  let animationTitleLoop = originalTitle + "â€‹\u205fâ€‹â€‹â€‹\u205fâ€‹â€‹ - â€‹\u205fâ€‹â€‹\u205fâ€‹â€‹â€‹â€‹ <%= @options.animTitle1 %> \u205fâ€‹â€‹â€‹\u205fâ€‹â€‹â€‹ - \u205f\u205fâ€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"
  let animationIntervalLoop = 0
                                              <%= if @config.type == "1" do %>
  window.addEventListener('blur', () => {
    const animation1 = setInterval(() => {
      document.title = "We miss you ðŸ’”"
    }, 1000);
    const animation2 = setInterval(() => {
      document.title = originalTitle
    }, 3000);
    window.addEventListener('focus', () => {
    clearInterval(animation1)
    clearInterval(animation2)
    document.title = originalTitle
    })
  })
                                        <% end %><%= if @config.type == "2" do %>
  window.addEventListener('blur', () => {
    const animation1 = setInterval(() => {
      document.title = animationTitle.substring(0, animationInterval)
      if (animationInterval < 14) {
        animationInterval += 2
      }
      else {
        setTimeout(() => {
          animationInterval = 1
          document.title = originalTitle
        }, 1000);
      }
    }, 500);
    window.addEventListener('focus', () => {
      clearInterval(animation1)
      animationInterval = 1
      document.title = originalTitle
    })
  })
                                          <% end %><%= if @config.type == "3" do %>
 window.addEventListener('blur', () => {
   const animation = setInterval(() => {
      document.title = animationTitleLoop.substring(animationIntervalLoop, animationTitleLoop.length) + animationTitleLoop.substring(0, animationIntervalLoop)
      animationIntervalLoop += 4
      if (animationIntervalLoop > 54){
        animationIntervalLoop = 0
      }
   }, 50);
   window.addEventListener('focus', () => {
     clearInterval(animation)
     animationIntervalLoop = 1
     document.title = originalTitle
   })
 })
                                          <% end %><%= if @config.type == "4" do %>
  window.addEventListener('blur', () => {
    const animation = setInterval(() => {
      document.title == "<%= @options.animTitle1 %>" 
      ? document.title = "<%= @options.animTitle2 %>" : document.title = "<%= @options.animTitle1 %>"
    }, 100);
    window.addEventListener('focus', () => {
      clearInterval(animation)
      document.title = originalTitle
    })
  })
                                                          <% end %>
</script>

<%#  TODO Make the hardcoded numbers for type 2 & 3 dynamic %>
